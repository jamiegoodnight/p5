{"ast":null,"code":"var _jsxFileName = \"/Users/vmogilevskiy/Documents/Projects/reactp5/src/components/p5.js\";\nimport React, { useState } from \"react\";\nimport Sketch from \"react-p5\";\nexport default (props => {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(500, 500).parent(canvasParentRef);\n  };\n\n  const draw = p5 => {\n    let count = 50;\n    let gap = 500 / count;\n\n    for (let i = 0; i < count; i++) {\n      p5.line(0, i * gap, 250, i * gap);\n      p5.line(250, i * gap, 500, i * gap);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Sketch, {\n    setup: setup,\n    draw: draw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  });\n});","map":{"version":3,"sources":["/Users/vmogilevskiy/Documents/Projects/reactp5/src/components/p5.js"],"names":["React","useState","Sketch","props","setup","p5","canvasParentRef","createCanvas","parent","draw","count","gap","i","line"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,gBAAgBC,KAAD,IAAW;AAGtB,QAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,eAAL,KAAyB;AACnCD,IAAAA,EAAE,CAACE,YAAH,CAAgB,GAAhB,EAAqB,GAArB,EAA0BC,MAA1B,CAAiCF,eAAjC;AACH,GAFD;;AAIA,QAAMG,IAAI,GAAIJ,EAAD,IAAQ;AACjB,QAAIK,KAAK,GAAG,EAAZ;AACA,QAAIC,GAAG,GAAG,MAAID,KAAd;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC5BP,MAAAA,EAAE,CAACQ,IAAH,CAAQ,CAAR,EAAUD,CAAC,GAACD,GAAZ,EAAgB,GAAhB,EAAoBC,CAAC,GAACD,GAAtB;AACAN,MAAAA,EAAE,CAACQ,IAAH,CAAQ,GAAR,EAAYD,CAAC,GAACD,GAAd,EAAkB,GAAlB,EAAsBC,CAAC,GAACD,GAAxB;AACH;AAEJ,GATD;;AAWA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEP,KAAf;AAAsB,IAAA,IAAI,EAAEK,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAnBD","sourcesContent":["import React, {useState} from \"react\";\nimport Sketch from \"react-p5\";\n \nexport default (props) => {\n\n \n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(500, 500).parent(canvasParentRef);   \n    };\n \n    const draw = (p5) => {\n        let count = 50\n        let gap = 500/count;\n\n        for (let i = 0; i < count; i ++){\n            p5.line(0,i*gap,250,i*gap)\n            p5.line(250,i*gap,500,i*gap)\n        }\n   \n    };\n \n    return <Sketch setup={setup} draw={draw} />;\n};"]},"metadata":{},"sourceType":"module"}